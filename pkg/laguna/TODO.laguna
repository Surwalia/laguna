#############################################################################
##  
#W  TODO.laguna.             The LAGUNA package                  Viktor Bovdi
#W                                                        Alexander Konovalov
#W                                                         Richard Rossmanith
#W                                                            Csaba Schneider
##
#H  $Id: TODO.laguna,v 1.9 2003/06/19 11:19:18 alexk Exp $
##
#############################################################################

  
                      GAP 4 PACKAGE LAGUNA TO-DO LIST

1) for future versions:

- add Embedding of the group G to NormalizedUnitgroup 
  and PCNormalizedUnitGroup

- if G is abelian, whether another system of generators for the
  unit group could be more efficient ?

- construction of bicycle units and bicycle unit group

- construction of the unitary subgroup

- fast tests for IsSolvableUnitgroup(KG) and 
  IsNilpotentUnitGroup(KG) without calculation of the unit 
  group itself

- add calculation of the invariants of p-groups related with the 
  modular isomorphism problem (currenly included in tst.g, AK):
  - JenningsFactors( <G> )
  - SandlingFactorGroup( <G> )
  - QuillenSeries( <G> )
  - ClassSumNumbers( <G> )
  - NumberOfConjugacyClassesPPowers( <G> )
  - RoggenkampParameter( <G> )
  
- add something like this:
     InstallImmediateMethod( IsGroupRing,
     IsFreeMagmaRing, 0,
     R -> HasUnderlyingMagma(R) and IsGroup(UnderlyingMagma(R)));
  for group rings which "does not know" that they are group rings

- add calculation of pc-presentation of factorgroups of the 
  normalized unit group over the subgroups 1+I^n, where I is the
  augmentation ideal (curently included in tst.g, AK)

- add functionality for lifting constraction (currenly included 
  in tst.g, AK)

- Add attribute LieDerivedLength


2) More ideas:

- Operation Augmentation(S,x) via InstallOtherMethod for 
  PartialAugmentation of x

- Operation PartialAugmentations(KG,x) for partial augmentation
  for every conjugacy class

- Implement (Left/Right)GroupRingIdealBySubgroup - for example, 
  to obtain J(G')

- Engel Lie algebras

- Improve algorithm for NormalizedUnitCF to avoid linear algebra
  in the WHOLE augmentation ideal (working modulo I^k)

- Implement Pcgs composed of Normalized Units like Pcgs of 
  permutations (for a case if this helps)

- Random functions for NormalizedUnitGroup and Units

- Calculation of kernel sizes (MIP invariant)

- add functionality for integral group rings